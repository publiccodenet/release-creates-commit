# SPDX-License-Identifier: CC0-1.0
# SPDX-FileCopyrightText: 2021-2023 The Foundation for Public Code <info@publiccode.net>

name: release-on-tag
on:
  push:
    tags:
      - "release-*.*.*" # tag example: release-0.12.1

defaults:
  run:
    shell: bash

jobs:
  release-the-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Set color
        id: random-color-generator
        run: echo "SELECTED_COLOR=green" >> "$GITHUB_OUTPUT"
      - name: Get color
        run: echo "The selected color is ${{ steps.random-color-generator.outputs.SELECTED_COLOR }}"
      - name: checkout
        uses: actions/checkout@v2
#      - name: install-deps
#        run: >
#          sudo apt-get install -y
#          weasyprint
      - name: echo-github-ref
        run: echo "${{ github.ref }}"
      - name: echo-trimmed-ref
        run: echo "RELEASE_TAG=$(echo ${{ github.ref }} | sed -e's@.*release-@@')"
      - name: trim-and-set-release-tag
        id: trim-and-set-release-tag
        run: >
          echo "RELEASE_TAG=$(echo ${{ github.ref }} | sed -e's@.*release-@@')"
          >> $GITHUB_OUTPUT
      - name: echo-output
        run: echo TAG ${{ steps.trim-and-set-release-tag.outputs.RELEASE_TAG }}
      - name: git-diff-main-0
        run: git diff origin/main
      - name: git-switch-main
        run: git switch main
      - name: update-date
        run: script/update-changelog-date.sh
#      - name: create-artifact.pdf
#        run: weasyprint --presentational-hints index.html artifact.pdf
      - name: create-release-body
        run: script/release-body.sh
      - name: set-git-user-email
        run: git config user.email "info@publiccode.net"
      - name: set-git-user-name
        run: git config user.name "release-on-tag"
      - name: do-git-add
        run: git add CHANGELOG.md
      - name: do-git-commit
        run: git commit -m'Set CHANGELOG date'
      - name: do-git-tag
        run:  git tag ${{ steps.trim-and-set-release-tag.outputs.RELEASE_TAG }}
      - name: do-git-push
        run:  git push origin main
      - name: do-git-push-tags
        run:  git push --tags
#      - name: upload
#        uses: softprops/action-gh-release@v1
#        with:
#          tag_name: ${{ steps.trim-and-set-release-tag.outputs.RELEASE_TAG }}
#          prerelease: true
#          files: |
#            artifact.pdf
#          body_path: release.body
